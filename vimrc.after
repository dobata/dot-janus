" ---------------------------------------------------------------------------------
" Whitespace
" ---------------------------------------------------------------------------------

set tabstop=4                   " a tab stop is 4 spaces
set shiftwidth=4                " number of spaces to use for autoindenting
set softtabstop=4               " when <BS>, pretend a tab is removed, even if spaces

set scrolloff=3                 " keep 3 lines off the edges of the screen when scrolling
set autoindent                  " always set autoindenting on
set showmode                    " always show what mode we're in
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline
set ttyfast

set history=1000
set undofile

set ffs=unix,mac,dos            " default file types
set spell                       " turn spell check on

" use relatice (offset) line number only in active window split
"set relativenumber
":au WinEnter * :setlocal relativenumber
":au WinLeave * :setlocal nonumber

" automatically resize vertical splits to maximize current split
":au WinEnter * :set winfixheight
":au WinEnter * :wincmd =

" ---------------------------------------------------------------------------------
" Editor layout
" ---------------------------------------------------------------------------------
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

set termencoding=utf-8
set encoding=utf-8
set lazyredraw                  " don't update the display while executing macros
set cmdheight=2                 " ues a status bar that is two rows high 

" set options based on whether we're in the GUI or terminal
" Mostly we're hiding the toolbar in MacVim
set background=dark
colorscheme solarized

if has("gui_running")
    set guioptions=egmrt
    set guioptions-=T
    set guioptions-=r
    set t_Co=256
    set showtabline=2           " always show tabbar in gui
    "set showtabline=0           " don't show the tab bar
"else
    "colorscheme solarized
    "set background=dark
endif

" Fonts
set gfn=Menlo:h11

" ---------------------------------------------------------------------------------
" handle long lines
" ---------------------------------------------------------------------------------
set textwidth=79
set formatoptions=qrn1
set colorcolumn=85

" ---------------------------------------------------------------------------------
" remap ; to :, save a keystroke
" ---------------------------------------------------------------------------------
nnoremap ; :

" ---------------------------------------------------------------------------------
" map jj to ESC for quicker escaping
" ---------------------------------------------------------------------------------
inoremap jj <ESC>

" ---------------------------------------------------------------------------------
" control whitespace preferences based on filetype, uses autocmd
" ---------------------------------------------------------------------------------
if has("autocmd")
    " enable file type detection
    "filetype on

    " syntax of these languages is fussy over tabs Vs spaces
    autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
    autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

    " treat .rss files as XML
    autocmd BufNewFile,BufRead *.rss,*.atom setfiletype xml

    " use css snippets in scss
    autocmd BufNewFile,BufRead *.scss set ft=scss.css
    " markdown filetype
    "autocmd BufNewFile,BufRead *.md, *.mkd, *.markdown, *.txt set spell
endif

"" Backup and swap files
""

set undodir=~/.janus/_undo//     " set unfo file location
set backupdir=~/.janus/_backup//    " where to put backup files.
set directory=~/.janus/_temp//      " where to put swap files.
blah

" ---------------------------------------------------------------------------------
" stuff for bundles
" ---------------------------------------------------------------------------------

" NERDTree
" toggle NERDTRee on or off via F2
map <F2> :NERDTreeToggle<CR>
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=1
let NERDTreeQuitOnOpen=1
"let NERDTreeWinSize=40

" Gundo
"nnoremap <F5> :GundoToggle<CR>
noremap <F3> :TagbarToggle<CR>
map <leader>po <Plug>PeepOpen
nmap <leader>mp :%!/usr/local/bin/multimarkdown<CR>


noremap <leader>ee :lopen<CR>
noremap <leader>eq :lclose<CR>
let g:syntastic_phpcs_conf="--standard=WordPress"
"let g:syntastic_auto_loc_list=1
